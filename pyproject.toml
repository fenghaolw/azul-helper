[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "azul-rl"
version = "0.1.0"
description = "Azul board game implementation for reinforcement learning research"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Azul RL Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "numpy>=1.21.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
# Only install these when specifically needed for RL development
rl = [
    "gymnasium>=0.26.0",
    "stable-baselines3>=1.6.0",
]
# Essential development dependencies for CI
dev = [
    "pytest>=6.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "flake8-docstrings>=1.6.0",
    "flake8-pyproject>=1.2.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "pre-commit>=2.15.0",
    "pytest-cov>=3.0.0",
    "psutil>=5.8.0",
]
# Only install these when specifically needed for visualization
viz = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
]
# Additional development tools (not needed for CI)
dev-extra = [
    "pytest-mock>=3.6.0",
    "flake8-import-order>=0.18.0",
    "flake8-bugbear>=22.0.0",
    "types-requests>=2.28.0",
    "types-setuptools>=57.4.0",
    "types-PyYAML>=6.0.0",
    "types-six>=1.16.0",
    "types-python-dateutil>=2.8.0",
    "types-pytz>=2021.3.0",
    "types-urllib3>=1.26.0",
]

[tool.setuptools]
packages = ["azul_rl", "azul_rl.game", "azul_rl.agents", "azul_rl.training", "azul_rl.utils", "azul_rl.tests"]

[tool.setuptools.package-dir]
"azul_rl" = "."
"azul_rl.game" = "game"
"azul_rl.agents" = "agents"
"azul_rl.training" = "training"
"azul_rl.utils" = "utils"
"azul_rl.tests" = "tests"

# =============================================================================
# Development Tools Configuration (Single Source of Truth)
# =============================================================================

# Common exclude patterns for all tools
[tool.dev-excludes]
# This is not a real pyproject.toml section, just documentation
# The actual exclude patterns are defined in each tool's section below
patterns = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    ".tox",
    ".venv",
    "venv",
    "build",
    "dist",
    "game_cpp",
    "open_spiel",
    "extension/node_modules",
    "webapp/node_modules",
    "*.egg-info",
    ".eggs"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | __pycache__
    | \.pytest_cache
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
    | build
    | dist
    | game_cpp
    | open_spiel
    | extension/node_modules
    | webapp/node_modules
    | \.eggs
    | .*\.egg-info
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["azul_rl", "game", "agents", "training", "utils", "evaluation"]
known_third_party = ["numpy", "gymnasium", "stable_baselines3", "flask", "pyspiel"]
skip_glob = [
    ".git/*",
    "__pycache__/*",
    ".pytest_cache/*",
    ".mypy_cache/*",
    ".tox/*",
    ".venv/*",
    "venv/*",
    "build/*",
    "dist/*",
    "game_cpp/*",
    "open_spiel/*",
    "extension/node_modules/*",
    "webapp/node_modules/*",
    ".eggs/*",
    "*.egg-info/*"
]

[tool.flake8]
max-line-length = 88
max-complexity = 50
ignore = [
    "E203",  # whitespace before ':' (conflicts with black)
    "W503",  # line break before binary operator (conflicts with black)
    "E501",  # line too long (handled by black)
    "E704",  # multiple statements on one line (conflicts with black for overloads)
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
    "D200",  # One-line docstring should fit on one line
    "D202",  # No blank lines allowed after function docstring
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "F401",  # imported but unused (for now)
    "F541",  # f-string is missing placeholders
    "B007",  # Loop control variable not used
    "E402",  # module level import not at top of file
    "I100",  # Import order (handled by isort)
    "I101",  # Import order (handled by isort)
    "I201",  # newlines are handled by black
]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    ".tox",
    ".venv",
    "venv",
    "build",
    "dist",
    "game_cpp/",
    "open_spiel",
    "extension/node_modules",
    "webapp/node_modules/*",
    ".eggs",
    "*.egg-info"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_unreachable = false
ignore_missing_imports = true
explicit_package_bases = true
exclude = [
    ".git/",
    "__pycache__/",
    ".pytest_cache/",
    ".mypy_cache/",
    ".tox/",
    ".venv/",
    "venv/",
    "build/",
    "dist/",
    "game_cpp/",
    "open_spiel/",
    "extension/node_modules/",
    "webapp/node_modules/*",
    ".eggs/",
    ".*\\.egg-info/",
    "tests/",
    "examples/",
    "profiling/",
    "scripts/"
]

[[tool.mypy.overrides]]
module = [
    "stable_baselines3.*",
    "gymnasium.*",
    "pyspiel.*",
    "open_spiel.*",
    "flask.*",
    "flask_cors.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
